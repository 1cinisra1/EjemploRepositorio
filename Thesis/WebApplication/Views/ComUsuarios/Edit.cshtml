@model WebApplication.Models.com_usuarios

@{
    ViewBag.Title = "Edit";
}


@if (ViewBag.Verificar is Int32)
{
<div class="register-box">
    <div class="register-box-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3 style="text-align:center">EDITAR USUARIO</h3>
                <hr />
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.idCom_Usuarios)

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Nombre</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Nombre, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Nombre, null, new { @class = "text-danger" })
                    </div>
                </div>

                @*@Html.HiddenFor(model => model.Roles_idRoles)*@

                @Html.HiddenFor(model => model.Roles_idRoles)
                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Rol</label>
                    <div class="col-md-8">
                        @Html.DropDownList("Roles_idRol", null, new { @class = "form-control form-control-rounded" })

                        @Html.ValidationMessageFor(model => model.Roles_idRoles)
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Apellido</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Apellido, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Apellido, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Correo</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Correo, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Correo, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class="col-sm-3 control-label">Dirección</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Direccion, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Direccion)
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Cédula</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Cedula, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Cedula, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Teléfono</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Telefono, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Telefono, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputEmail3" class=" required col-sm-3 control-label">Clave</label>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Com_Clave, new { htmlAttributes = new { @class = "form-control form-control-rounded" } })
                        @Html.ValidationMessageFor(model => model.Com_Clave, null, new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-8">
                        <button type="submit" class="btn btn-success">Aceptar</button>
                        @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

}
<style type="text/css">
    .form-control-rounded {
        border-radius: 16px;
    }

    .required::after {
        content: "*";
        font-weight: normal;
        color: red;
        font-size: large;
    }
</style>